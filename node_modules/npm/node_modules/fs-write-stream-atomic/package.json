{
  "name": "fs-write-stream-atomic",
  "version": "1.0.0",
  "description": "Like `fs.createWriteStream(...)`, but atomic.",
  "main": "index.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "graceful-fs": "^3.0.2"
  },
  "devDependencies": {
    "tap": "^0.4.12"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/npm/fs-write-stream-atomic"
  },
  "author": {
    "name": "Isaac Z. Schlueter",
    "email": "i@izs.me",
    "url": "http://blog.izs.me/"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/npm/fs-write-stream-atomic/issues"
  },
  "homepage": "https://github.com/npm/fs-write-stream-atomic",
  "readme": "# fs-write-stream-atomic\n\nLike `fs.createWriteStream(...)`, but atomic.\n\nWrites to a tmp file and does an atomic `fs.rename` to move it into\nplace when it's done.\n\nFirst rule of debugging: **It's always a write condition.**\n\n## USAGE\n\n```javascript\nvar fsWriteStreamAtomic = require('fs-write-stream-atomic')\n// options are optional.\nvar write = fsWriteStreamAtomic('output.txt', options)\nvar read = fs.createReadStream('input.txt')\nread.pipe(write)\n\n// When the write stream emits a 'finish' or 'close' event,\n// you can be sure that it is moved into place, and contains\n// all the bytes that were written to it, even if something else\n// was writing to `output.txt` at the same time.\n```\n\n### `fsWriteStreamAtomic(filename, [options])`\n\n* `filename` {String} The file we want to write to\n* `options` {Object}\n  * `chown` {Object} User and group to set ownership after write\n    * `uid` {Number}\n    * `gid` {Number}\n  * `encoding` {String} default = 'utf8'\n  * `mode` {Number} default = `0666`\n  * `flags` {String} default = `'w'`\n\n",
  "readmeFilename": "README.md",
  "gitHead": "81a7c1e0f9dbcfc6e7a2e004389f362c7997566c",
  "_id": "fs-write-stream-atomic@1.0.0",
  "_shasum": "df22968876ac5163dce116790792cb3592d16930",
  "_from": "fs-write-stream-atomic@*"
}
